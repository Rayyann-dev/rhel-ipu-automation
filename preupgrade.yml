---
- name: Run RHEL IPU Preupgrade Check
  hosts: all
  become: true
  become_method: sudo
  become_flags: 'su - root /bin/bash -c'
  gather_facts: true
  vars:
    #
    # RHEL versions
    #
    leapp_os_source: '7.9'
    leapp_os_target: '8.6'
    leapp_final_ver: '8'

    #
    # Satellite subscription
    #
    satellite_organization:
    satellite_activation_key_ipu:
    satellite_activation_key_real:

    #
    # Leapp tool update
    #
    leapp_update_check: false

    #
    # Leapp answerfile
    #
    leapp_answer_file: leapp.answerfile

    #
    # Leapp metadata file
    #
    leapp_metadata_file: leapp-data-21.tar.gz

    #
    # Leapp additional repositories to enable
    #
    leapp_repos_enable:
      - codeready-builder-for-rhel-8-x86_64-rpms

    #
    # Leapp upload report
    #
    # XXX FIXME TODO - Not implemented yet
    leapp_report_upload: false

    #
    # Known Leapp key IDs
    #
    leapp_keys_known:
      # GRUB update
      - baa75fad370c42fd037481909201cde9495dacf4
      # GRUB leapp fix
      - 1a185a73302d519a5a82b1d1d86de3c995382305

      # Kernel drivers - removed
      - f08a07da902958defa4f5c2699fae9ec2eb67c5b
      # Kernel drivers - unmaintained
      - 0ff2413fd3cb0358736bf9be597f4dbdf58f2c4d
      # kernel-devel multiple packages
      # This prevents running the transaction test
      # but removing older packages is not allowed
      # in all target environments during precheck
      #- 8ceea81afbbb1a329b7d82ca7212b21509e5b256

      # SELinux mode
      - 39d7183dafba798aa4bbb1e70b0ef2bbe5b1772f
      # SELinux disabled
      - 4f25fea9b15b9d1d07d52cc1de02073f295dac3d
      # SELinux relabeling
      - 8fb81863f8413bd617c2a55b69b8e10ff03d7c72

      # authselect update
      - 40c4ab1da4a30dc1ca40e543f6385e1336d8810c
      # PAM pam_pkcs11 module
      - bf47e7305d6805e8bbeaa7593cf01e38030c23f3

      # subscription-manager release
      - 747a4ca25303eda17d1891bb85eeb226be14f252

      # Incompatible brltty
      - 6bdee7a18a7b2ef8926cda49eba5bab74726b412
      # Incompatible dosfstools
      - c75fe5e06c70d9e764703fa2611f917c75946226
      # Incompatible grep
      - 94665a499e2eeee35eca3e7093a7abe183384b16
      # Python versions
      - 0c98585b1d8d252eb540bf61560094f3495351f5

      # chrony configuration
      - 9acbfcce3d310a70b602c7ab0a9c2cb94eb6b63f
      # OpenSSH Protocol
      - 5744a935aab15fe2386ea52849d21edd6525e4d7
      # Postfix changes
      - 5721e0a07a67d82cf7e5ea6f17662cd4f82e0a33

      # Other packages
      - 13f0791ae5f19f50e7d0d606fb6501f91b1efb2c

      # Other repositories - enabled for upgrade
      # This is seen if using leapp_repos_enable
      - e931e4c299de7d276238e5d0b363c010e8587977
      # Other repositories - enabled
      - e931e4c299de7d276238e5d0b363c010e85871b9
      # Other repositories - excluded
      - 1b9132cb2362ae7830e48eee7811be9527747de8
      # Other repositories - unknown
      - 8e89e20c645cea600b240156071d81c64daab7ad

      #
      # IDs that will need to be handled later,
      # listed here temporarily to reduce noise
      #
      # NFS mounts
      - 9881b25faceeeaa7a6478bcdac29afd7f6baaaed
      # Parsing fstab
      - 7036bcd7ef0141d4fd7e415101e70a1a71a65d1e

    #
    # Known removed kernel drivers
    #
    kernel_drivers_known_removed:
      - floppy
      - pata_acpi

    #
    # Known unmaintained kernel drivers
    #
    kernel_drivers_known_unmaintained:
      - e1000
      - mptbase
      - mptsas
      - mptscsih
      - mptspi

    #
    # Known 3rd party packages
    #
    other_packages_known:
      - BESAgent
      - CentrifyDA
      - CentrifyDC
      - CentrifyDC-curl
      - CentrifyDC-openldap
      - CentrifyDC-openssl
      - chef
      - gpg-pubkey
      - omi
      - scx
      - TaniumClient

    #
    # Known additional repositories
    #
    other_repos_known:
      - rhel-7-server-satellite-client-6-rpms

  tasks:
    - name: Fail if running unsupported RHEL version
      fail:
        msg: "Unsupported RHEL source version {{ ansible_facts.distribution_version }} in use."
      when: ansible_facts.distribution_version != leapp_os_source

    - name: Fail if RHEL release version set
      command: subscription-manager release
      register: release_info
      failed_when: "'Release not set' not in release_info.stdout"
      changed_when: false

    - name: Check enabled repositories
      command: subscription-manager repos --list-enabled
      register: enabled_repos
      changed_when: false

    # This is considered safe to be left enabled after preupgrade check
    - name: Enable RHEL 7 Server Extras repository
      command: subscription-manager repos --enable rhel-7-server-extras-rpms
      when: "'rhel-7-server-extras-rpms' not in enabled_repos.stdout"

    - name: Install latest Leapp package
      vars:
        leapp_package_state: "{{ 'latest' if leapp_update_check | bool else 'present' }}"
      yum:
        name:
          - leapp
          - leapp-upgrade
        state: "{{ leapp_package_state }}"

    - name: Gather package facts
      package_facts:

    - name: Fail if version locked packages
      command: >
        yum
        -C
        --disableplugin=product-id,search-disabled-repos,subscription-manager
        versionlock list
      register: versionlock_list
      failed_when: versionlock_list.rc != 0 or versionlock_list.stdout | regex_search('[0-9]:')
      changed_when: false
      when: "'yum-plugin-versionlock' in ansible_facts.packages"

    - name: Extract Leapp metadata archive
      unarchive:
        src: "{{ leapp_metadata_file }}"
        dest: /etc/leapp/files
        owner: root
        group: root
        mode: '0644'

    - name: Copy Leapp answerfile
      copy:
        src: "{{ leapp_answer_file }}"
        dest: /var/log/leapp/answerfile.userchoices
        mode: '0644'

    - name: Remove Leapp state files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /var/lib/leapp/el8userspace
        - /var/lib/leapp/leapp.db
        - /var/lib/leapp/scratch
        - /var/log/leapp/answerfile

    - name: Run Leapp preupgrade check
      block:
        - name: Subscribe to RHEL IPU content view
          command: >
            subscription-manager register
            --force
            --organization={{ satellite_organization }}
            --activation-key={{ satellite_activation_key_ipu }}
          when:
            - satellite_organization | default(false)
            - satellite_activation_key_ipu | default(false)

        - name: Run leapp preupgrade
          vars:
            enable_param: " --enablerepo "
            enable_repos: "{{ enable_param + leapp_repos_enable | default([], true) | join(enable_param) }}"
          command: >
            leapp
            preupgrade
            {{ enable_repos }}
            --target {{ leapp_os_target }}
          register: leapp_command
          failed_when: "'report has been generated' not in leapp_command.stdout"

      always:
        - name: Subscribe to RHEL real content view
          command: >
            subscription-manager register
            --force
            --organization={{ satellite_organization }}
            --activation-key={{ satellite_activation_key_real }}
          when:
            - satellite_organization | default(false)
            - satellite_activation_key_real | default(false)

        - name: Remove Leapp state files
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - /var/lib/leapp/el8userspace
            - /var/lib/leapp/leapp.db
            - /var/lib/leapp/scratch

    - name: Read Leapp report file
      slurp:
        src: /var/log/leapp/leapp-report.json
      register: json_file

    - name: Set Leapp report variable
      set_fact:
        leapp_report: "{{ json_file.content | b64decode | from_json }}"

    - name: Fail if empty Leapp report
      fail:
        msg: "Empty Leapp report found."
      when: not leapp_report.entries

    # XXX FIXME TODO - Not implemented yet
    - name: Upload Leapp report
      command: echo TODO
      when: leapp_report_upload | bool

    - name: Check unrecognized risks in report
      set_fact:
        risks_new: "{{ risks_new | default([]) + [item] }}"
      loop: "{{ leapp_report.entries | map(attribute='key') | sort | unique }}"
      when: item not in leapp_keys_known

    - name: Fail if unrecognized risks in report
      throttle: 1
      fail:
        msg: "Unrecognized risk must be investigated: {{ item }}"
      loop: "{{ risks_new | default([]) }}"

    - name: Check unrecognized removed kernel drivers found
      vars:
        key_id: f08a07da902958defa4f5c2699fae9ec2eb67c5b
        found_drivers_removed: "{{ (leapp_report.entries | selectattr('key', '==', key_id) | map(attribute='summary') | join('\n')).split('\n') | select('search', '- ') | list | replace('     - ', '') }}"
      set_fact:
        kernel_drivers_removed_new: "{{ kernel_drivers_removed_new | default([]) + [item] }}"
      loop: "{{ found_drivers_removed | sort | unique }}"
      when:
        - found_drivers_removed is defined
        - item not in kernel_drivers_known_removed

    - name: Fail if unrecognized removed kernel drivers found
      throttle: 1
      fail:
        msg: "Unrecognized removed kernel driver must be investigated: {{ item }}"
      loop: "{{ kernel_drivers_removed_new | default([]) }}"

    - name: Check unrecognized unmaintained kernel drivers found
      vars:
        key_id: 0ff2413fd3cb0358736bf9be597f4dbdf58f2c4d
        found_drivers_unmaintained: "{{ (leapp_report.entries | selectattr('key', '==', key_id) | map(attribute='summary') | join('\n')).split('\n') | select('search', '- ') | list | replace('     - ', '') }}"
      set_fact:
        kernel_drivers_unmaintained_new: "{{ kernel_drivers_unmaintained_new | default([]) + [item] }}"
      loop: "{{ found_drivers_unmaintained | sort | unique }}"
      when:
        - found_drivers_unmaintained is defined
        - item not in kernel_drivers_known_unmaintained

    - name: Fail if unrecognized unmaintained kernel drivers found
      throttle: 1
      fail:
        msg: "Unrecognized unmaintained kernel driver must be investigated: {{ item }}"
      loop: "{{ kernel_drivers_unmaintained_new | default([]) }}"

    - name: Check unrecognized packages found
      vars:
        key_id: 13f0791ae5f19f50e7d0d606fb6501f91b1efb2c
        other_packages: "{{ (leapp_report.entries | selectattr('key', '==', key_id) | map(attribute='summary') | join('\n')).split('\n') | select('search', '- ') | list | replace('- ', '') }}"
      set_fact:
        other_packages_new: "{{ other_packages_new | default([]) + [item] }}"
      loop: "{{ other_packages | sort | unique }}"
      when:
        - other_packages is defined
        - item not in other_packages_known

    - name: Fail if unrecognized packages found
      throttle: 1
      fail:
        msg: "Unrecognized package must be investigated: {{ item }}"
      loop: "{{ other_packages_new | default([]) }}"

    - name: Check unrecognized repositories found
      vars:
        key_id: 8e89e20c645cea600b240156071d81c64daab7ad
        other_repos: "{{ (leapp_report.entries | selectattr('key', '==', key_id) | map(attribute='summary') | join('\n')).split('\n') | select('search', '- ') | list | replace('- ', '') }}"
      set_fact:
        other_repos_new: "{{ other_repos_new | default([]) + [item] }}"
      loop: "{{ other_repos | sort | unique }}"
      when:
        - other_repos is defined
        - item not in other_repos_known
        - "'codeready-builder' not in item"

    - name: Fail if unrecognized repositories found
      fail:
        msg: "Unrecognized package must be investigated: {{ item }}"
      loop: "{{ other_repos_new | default([]) }}"

    - name: Display conclusion message
      debug:
        msg: "No unrecognized risks found, in-place upgrade looks safe."
